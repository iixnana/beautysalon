{"version":3,"sources":["components/UserComponents/User/User.js","containers/User/UserList/UserList.js"],"names":["user","props","id","format","creationDate","firstName","lastName","phone","email","Button","onClick","history","push","bsStyle","UserList","componentDidMount","onGetData","users","this","data","length","map","User","key","Row","Col","mdOffset","md","to","Table","responsive","striped","Component","connect","state","repository","dispatch","url","repositoryActions"],"mappings":"2RAyCeA,EAxBF,SAACC,GACV,OACI,kBAAC,IAAD,KACI,4BACI,4BAAKA,EAAMD,KAAKE,IAChB,4BAAI,kBAAC,IAAD,CAAQC,OAAO,cAAcF,EAAMD,KAAKI,eAC5C,4BAAKH,EAAMD,KAAKK,WAChB,4BAAKJ,EAAMD,KAAKM,UAChB,4BAAKL,EAAMD,KAAKO,OAChB,4BAAKN,EAAMD,KAAKQ,OAChB,4BACI,kBAACC,EAAA,EAAD,CAAQC,QAAS,kBAvBNR,EAuBkCD,EAAMD,KAAKE,QAAID,EAAMU,QAtB1EC,KAAK,gBAAkBV,GADL,IAACA,IAuBX,YAEJ,4BACI,kBAACO,EAAA,EAAD,CAAQI,QAAQ,UAAUH,QAAS,kBAtBzBR,EAsBoDD,EAAMD,KAAKE,QAAID,EAAMU,QArB3FC,KAAK,eAAiBV,GADL,IAACA,IAsBV,WAEJ,4BACI,kBAACO,EAAA,EAAD,CAAQI,QAAQ,SAASH,QAAS,kBArBvBR,EAqBmDD,EAAMD,KAAKE,QAAID,EAAMU,QApB3FC,KAAK,eAAiBV,GADJ,IAACA,IAqBX,c,kOC1BdY,E,2MACFC,kBAAoB,WAEhB,EAAKd,MAAMe,UADD,Y,yVACV,IAA+B,EAAKf,S,wEAG9B,IAAD,OACDgB,EAAQ,GAUZ,OARIC,KAAKjB,MAAMkB,MAAQD,KAAKjB,MAAMkB,KAAKC,OAAS,IAC5CH,EAAQC,KAAKjB,MAAMkB,KAAKE,KAAI,SAACrB,GACzB,OACI,kBAACsB,EAAD,eAAMC,IAAKvB,EAAKE,GAAIF,KAAMA,GAAU,EAAKC,YAMjD,kBAAC,IAAD,KACI,kBAACuB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,SAAU,GAAIC,GAAI,GACnB,kBAAC,OAAD,CAAMC,GAAG,eAAT,iBAGR,6BACA,kBAACJ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKE,GAAI,IACL,kBAACE,EAAA,EAAD,CAAOC,YAAU,EAACC,SAAO,GACrB,+BACI,4BACI,kCACA,4CACA,yCACA,wCACA,qCACA,qCACA,uCACA,sCACA,wCAGR,+BACKd,W,GA1CVe,aA8DRC,uBAVS,SAACC,GACrB,MAAO,CACHf,KAAMe,EAAMC,WAAWhB,SAGJ,SAACiB,GACvB,MAAO,CACHpB,UAAW,SAACqB,EAAKpC,GAAN,OAAgBmC,EAASE,IAA0BD,EAAKpC,QAG7DgC,CAA6CnB","file":"static/js/3.8e39ae37.chunk.js","sourcesContent":["import React from 'react';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Moment from 'react-moment';\r\nimport { Button } from 'react-bootstrap';\r\n \r\nconst redirectToUserDetails = (id, history) => {\r\n    history.push('/userDetails/' + id);\r\n}\r\n \r\nconst redirectToUpdateUser = (id, history) => {\r\n    history.push('/updateUser/' + id);\r\n}\r\n \r\nconst rediterctToDeleteUser = (id, history) => {\r\n    history.push('/deleteUser/' + id);\r\n}\r\n \r\nconst user = (props) => {\r\n    return (\r\n        <Aux>\r\n            <tr>\r\n                <td>{props.user.id}</td>\r\n                <td><Moment format=\"DD/MM/YYYY\">{props.user.creationDate}</Moment></td>\r\n                <td>{props.user.firstName}</td>\r\n                <td>{props.user.lastName}</td>\r\n                <td>{props.user.phone}</td>\r\n                <td>{props.user.email}</td>\r\n                <td>\r\n                    <Button onClick={() => redirectToUserDetails(props.user.id, props.history)}>Details</Button>\r\n                </td>\r\n                <td>\r\n                    <Button bsStyle=\"success\" onClick={() => redirectToUpdateUser(props.user.id, props.history)}>Update</Button>\r\n                </td>\r\n                <td>\r\n                    <Button bsStyle=\"danger\" onClick={() => rediterctToDeleteUser(props.user.id, props.history)}>Delete</Button>\r\n                </td>\r\n            </tr>\r\n        </Aux>\r\n    )\r\n}\r\n \r\nexport default user;","import React, { Component } from 'react';\r\nimport { Table, Col, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport { connect } from 'react-redux';\r\nimport * as repositoryActions from '../../../store/actions/repositoryActions';\r\nimport User from \"../../../components/UserComponents/User/User\";\r\n\r\nclass UserList extends Component {\r\n    componentDidMount = () => {\r\n        let url = '/api/user';\r\n        this.props.onGetData(url, { ...this.props });\r\n    }\r\n\r\n    render() {\r\n        let users = [];\r\n\r\n        if (this.props.data && this.props.data.length > 0) {\r\n            users = this.props.data.map((user) => {\r\n                return (\r\n                    <User key={user.id} user={user} {...this.props} />\r\n                )\r\n            })\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col mdOffset={10} md={2}>\r\n                        <Link to='/createUser' >Create User</Link>\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <Table responsive striped>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Id</th>\r\n                                    <th>CreationDate</th>\r\n                                    <th>FirstName</th>\r\n                                    <th>LastName</th>\r\n                                    <th>Phone</th>\r\n                                    <th>Email</th>\r\n                                    <th>Details</th>\r\n                                    <th>Update</th>\r\n                                    <th>Delete</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {users}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.repository.data\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n     return {\r\n         onGetData: (url, props) => dispatch(repositoryActions.getData(url, props))     \r\n    } \r\n} \r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList);"],"sourceRoot":""}